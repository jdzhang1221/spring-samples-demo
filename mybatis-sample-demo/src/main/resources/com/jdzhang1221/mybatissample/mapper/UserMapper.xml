<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdzhang1221.mybatissample.mapper.UserMapper">
    <resultMap id="usermap" type="com.jdzhang1221.mybatissample.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <insert id="insert">
        INSERT INTO sys_user (id,user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        	(#{id},#{userName},#{userPassword},#{userEmail},
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUseGeneratedKeys" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (id,user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        	(#{id},#{userName},#{userPassword},#{userEmail},
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUseSelectKey">
        INSERT INTO sys_user (id,user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        (#{id},#{userName},#{userPassword},#{userEmail},
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
        <selectKey keyProperty="id" resultType="long" keyColumn="id" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,
        <if test="userEmail!=null and userEmail!=''">
            user_email,
        </if>
        user_info,head_img,create_time
        ) values (#{userName},#{userPassword},
        <if test="userEmail!=null and userEmail!=''">
            #{userEmail},
        </if>
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="updateById">
        UPDATE sys_user
        SET user_name = #{userName},
        user_password = #{userPassword},
        user_email = #{userEmail},
        user_info = #{userInfo},
        head_img = #{headImg,jdbcType=BLOB},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        WHERE
        	id = #{id}
    </update>
    <update id="updateByIdSelective">
        update sys_user set
        <if test="userName!=null and userName!=''">
            user_name=#{userName},
        </if>
        <if test="userPassword!=null and userPassword!=''">
            user_password=#{userPassword},
        </if>
        <if test="userEmail!=null and userEmail!=''">
            user_email=#{userEmail},
        </if>
        <if test="userInfo!=null and userInfo!=''">
            user_info=#{userInfo},
        </if>
        <if test="headImg!=null">
            head_img=#{headImg,jdbcType=BLOB},
        </if>
        <if test="createTime!=null">
            create_time=#{createTime,jdbcType=TIMESTAMP},
        </if>
        id=#{id}
        where id=#{id}
    </update>
    <delete id="deleteById">
        delete from sys_user where id=#{id}
    </delete>

    <select id="selectById" resultMap="usermap">
        select * from sys_user where id=#{id}
    </select>

    <select id="selectAll" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        select id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
    </select>
    <select id="selectRoleByUserId" resultType="com.jdzhang1221.mybatissample.model.SysRoleExtend">
        SELECT
        	r.id,
        	r.role_name roleName,
        	r.enabled,
        	r.create_by createBy,
        	r.create_time createTime,
        	u.user_name as "sysUser.userName"
        FROM
        	sys_user u
        	INNER JOIN sys_user_role ur ON u.id = ur.user_id
        	INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE
        	u.id = #{userId}
    </select>
    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.jdzhang1221.mybatissample.model.SysRole">
        SELECT
        	r.id,
        	r.role_name roleName,
        	r.enabled,
        	r.create_by createBy,
        	r.create_time createTime
        FROM
        	sys_user u
        	INNER JOIN sys_user_role ur ON u.id = ur.user_id
        	INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE
        	u.id = #{userId} and r.enabled=#{enabled}
    </select>
    <select id="selectRolesByUserAndRole" resultType="com.jdzhang1221.mybatissample.model.SysRole">
        SELECT
        	r.id,
        	r.role_name roleName,
        	r.enabled,
        	r.create_by createBy,
        	r.create_time createTime
        FROM
        	sys_user u
        	INNER JOIN sys_user_role ur ON u.id = ur.user_id
        	INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE
        	u.id = #{user.id} and r.enabled=#{role.enabled}
    </select>
    <select id="selectByUser" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        SELECT
        id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        create_time createTime
        FROM
        sys_user
        WHERE
        1 = 1
        <if test="userName!=null and userName!=''">
            AND user_name like CONCAT('%',#{userName},'%')
        </if>
        <if test="userEmail!=null and userEmail!=''">
            AND user_email =#{userEmail}
        </if>
    </select>
</mapper>