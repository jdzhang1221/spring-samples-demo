<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdzhang1221.mybatissample.mapper.UserMapper">
    <resultMap id="usermap" type="com.jdzhang1221.mybatissample.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <insert id="insert">
        INSERT INTO sys_user (id,user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        	(#{id},#{userName},#{userPassword},#{userEmail},
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUseGeneratedKeys" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (id,user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        	(#{id},#{userName},#{userPassword},#{userEmail},
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertUseSelectKey">
        INSERT INTO sys_user (id,user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        (#{id},#{userName},#{userPassword},#{userEmail},
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
        <selectKey keyProperty="id" resultType="long" keyColumn="id" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,
        <if test="userEmail!=null and userEmail!=''">
            user_email,
        </if>
        user_info,head_img,create_time
        ) values (#{userName},#{userPassword},
        <if test="userEmail!=null and userEmail!=''">
            #{userEmail},
        </if>
        #{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (user_name,user_password, user_email, user_info, head_img,create_time )
        VALUES
        <foreach collection="list" item="user" separator=",">
            (#{user.userName},#{user.userPassword},#{user.userEmail},
            #{user.userInfo},#{user.headImg,jdbcType=BLOB},#{user.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <update id="updateById">
        UPDATE sys_user
        SET user_name = #{userName},
        user_password = #{userPassword},
        user_email = #{userEmail},
        user_info = #{userInfo},
        head_img = #{headImg,jdbcType=BLOB},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        WHERE
        	id = #{id}
    </update>
    <update id="updateByIdSelective">
        update sys_user set
        <if test="userName!=null and userName!=''">
            user_name=#{userName},
        </if>
        <if test="userPassword!=null and userPassword!=''">
            user_password=#{userPassword},
        </if>
        <if test="userEmail!=null and userEmail!=''">
            user_email=#{userEmail},
        </if>
        <if test="userInfo!=null and userInfo!=''">
            user_info=#{userInfo},
        </if>
        <if test="headImg!=null">
            head_img=#{headImg,jdbcType=BLOB},
        </if>
        <if test="createTime!=null">
            create_time=#{createTime,jdbcType=TIMESTAMP},
        </if>
        id=#{id}
        where id=#{id}
    </update>
    <update id="updateByIdSelectiveSet">
        update sys_user
        <set>
            <if test="userName!=null and userName!=''">
                user_name=#{userName},
            </if>
            <if test="userPassword!=null and userPassword!=''">
                user_password=#{userPassword},
            </if>
            <if test="userEmail!=null and userEmail!=''">
                user_email=#{userEmail},
            </if>
            <if test="userInfo!=null and userInfo!=''">
                user_info=#{userInfo},
            </if>
            <if test="headImg!=null">
                head_img=#{headImg,jdbcType=BLOB},
            </if>
            <if test="createTime!=null">
                create_time=#{createTime,jdbcType=TIMESTAMP},
            </if>
            id=#{id},
        </set>
        where id=#{id}
    </update>
    <!--<update id="updateByMap">-->
    <!--update sys_user-->
    <!--set-->
    <!--<foreach collection="_parameter" item="val" index="key" separator=",">-->
    <!--${key}=#{val}-->
    <!--</foreach>-->
    <!--where id=#{id}-->
    <!--</update>-->
    <update id="updateByMap">
        update sys_user
        set
        <foreach collection="userMap" item="val" index="key" separator=",">
            ${key}=#{val}
        </foreach>
        where id=#{userMap.id}
    </update>
    <delete id="deleteById">
        delete from sys_user where id=#{id}
    </delete>

    <select id="selectById" resultMap="usermap">
        select * from sys_user where id=#{id}
    </select>

    <select id="selectAll" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        select id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        user_info userInfo,
        head_img headImg,
        create_time createTime
        from sys_user
    </select>
    <select id="selectRoleByUserId" resultType="com.jdzhang1221.mybatissample.model.SysRoleExtend">
        SELECT
        	r.id,
        	r.role_name roleName,
        	r.enabled,
        	r.create_by createBy,
        	r.create_time createTime,
        	u.user_name as "sysUser.userName"
        FROM
        	sys_user u
        	INNER JOIN sys_user_role ur ON u.id = ur.user_id
        	INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE
        	u.id = #{userId}
    </select>
    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.jdzhang1221.mybatissample.model.SysRole">
        SELECT
        	r.id,
        	r.role_name roleName,
        	r.enabled,
        	r.create_by createBy,
        	r.create_time createTime
        FROM
        	sys_user u
        	INNER JOIN sys_user_role ur ON u.id = ur.user_id
        	INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE
        	u.id = #{userId} and r.enabled=#{enabled}
    </select>
    <select id="selectRolesByUserAndRole" resultType="com.jdzhang1221.mybatissample.model.SysRole">
        SELECT
        	r.id,
        	r.role_name roleName,
        	r.enabled,
        	r.create_by createBy,
        	r.create_time createTime
        FROM
        	sys_user u
        	INNER JOIN sys_user_role ur ON u.id = ur.user_id
        	INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE
        	u.id = #{user.id} and r.enabled=#{role.enabled}
    </select>
    <select id="selectByUser" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        SELECT
        id,
        user_name userName,
        user_password userPassword,
        user_email userEmail,
        create_time createTime
        FROM
        sys_user
        WHERE
        1 = 1
        <if test="userName!=null and userName!=''">
            AND user_name like CONCAT('%',#{userName},'%')
        </if>
        <if test="userEmail!=null and userEmail!=''">
            AND user_email =#{userEmail}
        </if>
    </select>
    <select id="selectByIdOrUserName" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        select id,
        user_name,
        user_password,
        user_email,
        create_time
        from sys_user
        where 1=1
        <choose>
            <when test="id!=null">
                and id=#{id}
            </when>
            <when test="userName!=null and userName!=''">
                and user_name=#{userName}
            </when>
            <otherwise>
                and 1=2
            </otherwise>
        </choose>
    </select>
    <select id="selectByUserWhere" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        select id,
        user_name,
        user_password,
        user_email,
        create_time
        from sys_user
        <where>
            <if test="userName!=null and userName!=''">
                and user_name like concat ('%',#{userName},'%')
            </if>
            <if test="userEmail!=null and userEmail!=''">
                and user_email=#{userEmail}
            </if>
        </where>
    </select>
    <select id="selectByIdList" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        select id,
        user_name,
        user_password,
        user_email,
        create_time
        from sys_user
        where id in
        <foreach collection="idList" open="(" close=")" separator=","
                 item="id" index="i">
            #{id}
        </foreach>
    </select>
    <select id="selectByIdArray" resultType="com.jdzhang1221.mybatissample.model.SysUser">
        select id,
        user_name,
        user_password,
        user_email,
        create_time
        from sys_user
        where id in
        <foreach collection="array" open="(" close=")" separator=","
                 item="id" index="i">
            #{id}
        </foreach>
    </select>
    <!--<resultMap id="userRoleMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend">-->
    <!--<id property="id" column="id"/>-->
    <!--<result property="userName" column="user_name"/>-->
    <!--<result property="userPassword" column="user_password"/>-->
    <!--<result property="userEmail" column="user_email"/>-->
    <!--<result property="userInfo" column="user_info"/>-->
    <!--<result property="headImg" column="head_img" jdbcType="BLOB"/>-->
    <!--<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>-->
    <!--&lt;!&ndash;role相关属性&ndash;&gt;-->
    <!--<result property="sysRole.id" column="role_id"/>-->
    <!--<result property="sysRole.roleName" column="role_role_name"/>-->
    <!--<result property="sysRole.enabled" column="role_enabled"/>-->
    <!--<result property="sysRole.createBy" column="role_create_by"/>-->
    <!--<result property="sysRole.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>-->
    <!--</resultMap>-->

    <!--<resultMap id="userRoleMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">-->
    <!--<result property="sysRole.id" column="role_id"/>-->
    <!--<result property="sysRole.roleName" column="role_role_name"/>-->
    <!--<result property="sysRole.enabled" column="role_enabled"/>-->
    <!--<result property="sysRole.createBy" column="role_create_by"/>-->
    <!--<result property="sysRole.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>-->
    <!--</resultMap>-->

    <!--<resultMap id="userRoleMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">-->
    <!--<association property="sysRole" columnPrefix="role_" javaType="com.jdzhang1221.mybatissample.model.SysRole">-->
    <!--<result property="id" column="id"/>-->
    <!--<result property="roleName" column="role_name"/>-->
    <!--<result property="enabled" column="enabled"/>-->
    <!--<result property="createBy" column="create_by"/>-->
    <!--<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>-->
    <!--</association>-->
    <!--</resultMap>-->

    <resultMap id="userRoleMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">
        <association property="sysRole" columnPrefix="role_"
                     resultMap="com.jdzhang1221.mybatissample.mapper.RoleMapper.roleMap"/>
    </resultMap>

    <select id="selectUserAndRoleByIdResultMap" resultMap="userRoleMap">
        select u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.create_time,
        r.id role_id,
        r.role_name role_role_name,
        r.enabled role_enabled,
        r.create_by role_create_by,
        r.create_time role_create_time
        from sys_user u
        inner join sys_user_role ur on u.id=ur.user_id
        inner join sys_role r on ur.role_id=r.id
        where u.id=#{id}
    </select>

    <resultMap id="userRoleMapSelect" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">
        <association property="sysRole"
                     fetchType="lazy"
                     select="com.jdzhang1221.mybatissample.mapper.RoleMapper.selectRoleById"
                     column="id={role_id}"/>
    </resultMap>
    <select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
        select u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.user_info,
        u.head_img,
        u.create_time,
        ur.role_id
        from sys_user u
        inner join sys_user_role ur on u.id=ur.user_id
        where u.id=#{id}
    </select>
    <!--column="id={role_id}".这里的id就是 com.jdzhang1221.mybatissample.mapper.RoleMapper.selectRoleById需要的参数名称，
    role_id是参数值，名称要和上面查询中的最后一列保持一致-->

    <!--<resultMap id="userRoleListMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">-->
    <!--<collection property="sysRoleList" columnPrefix="role_"-->
    <!--ofType="com.jdzhang1221.mybatissample.model.SysRole">-->
    <!--<id property="id" column="id"/>-->
    <!--<result property="roleName" column="role_name"/>-->
    <!--<result property="enabled" column="enabled"/>-->
    <!--<result property="createBy" column="create_by"/>-->
    <!--<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>-->
    <!--</collection>-->
    <!--</resultMap>-->
    <!--<resultMap id="userRoleListMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">-->
    <!--<collection property="sysRoleList" columnPrefix="role_"-->
    <!--resultMap="com.jdzhang1221.mybatissample.mapper.RoleMapper.roleMap">-->
    <!--</collection>-->
    <!--</resultMap>-->


    <!--<select id="selectAllUserAndRoles" resultMap="userRoleListMap">-->
    <!--select u.id,-->
    <!--u.user_name,-->
    <!--u.user_password,-->
    <!--u.user_email,-->
    <!--u.create_time,-->
    <!--r.id role_id,-->
    <!--r.role_name role_role_name,-->
    <!--r.enabled role_enabled,-->
    <!--r.create_by role_create_by,-->
    <!--r.create_time role_create_time-->
    <!--from sys_user u-->
    <!--inner join sys_user_role ur on u.id=ur.user_id-->
    <!--inner join sys_role r on ur.role_id=r.id-->
    <!--</select>-->

    <resultMap id="userRoleListMap" type="com.jdzhang1221.mybatissample.model.SysUserExtend" extends="usermap">
        <collection property="sysRoleList" columnPrefix="role_"
                    resultMap="com.jdzhang1221.mybatissample.mapper.RoleMapper.rolePrivilegeListMap">
        </collection>
    </resultMap>
    <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
 select u.id,
        u.user_name,
        u.user_password,
        u.user_email,
        u.create_time,
        r.id role_id,
        r.role_name role_role_name,
        r.enabled role_enabled,
        r.create_by role_create_by,
        r.create_time role_create_time,
        p.id role_privilege_id,
        p.privilege_name role_privilege_privilege_name,
        p.privilege_url role_privilege_privilege_url
        from sys_user u
        inner join sys_user_role ur on u.id=ur.user_id
        inner join sys_role r on ur.role_id=r.id
        inner join sys_role_privilege rp on rp.role_id=r.id
        inner join sys_privilege p on p.id=rp.privilege_id
    </select>

    <resultMap id="userRoleListMapSelect" extends="usermap"
               type="com.jdzhang1221.mybatissample.model.SysUserExtend">
        <collection property="sysRoleList" fetchType="lazy"
                    select="com.jdzhang1221.mybatissample.mapper.RoleMapper.selectRoleByUserId"
                    column="{userId=id}"/>
    </resultMap>
    <select id="selectAllUserAndRolesSelect" resultMap="userRoleListMapSelect">
select
u.id,
u.user_name,
u.user_password,
u.user_email,
u.create_time
from sys_user u
where u.id=#{id}
    </select>
</mapper>